# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release

on:
  push:
    branches: [ master ]
    tags:
      - release

jobs:
  build:
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v1.3.0
        with:
          java-version: 14
      - name: Gradle Command
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: ${{matrix.mode}}
      - uses: actions/upload-artifact@master
        if: matrix.mode == 'jlinkCustomZip'
        with:
          name: universal
          path: build/image.zip
      - uses: actions/upload-artifact@master
        if: matrix.mode == 'jpackageImage'
        with:
          name: ${{matrix.os}}
          path: build/jpackage
    strategy:
       matrix:
         mode: [jlinkCustomZip, jpackageImage]
         os: [ubuntu-latest, windows-latest, macos-latest]
         exclude:
           - mode: jlinkCustomZip
             os: windows-latest
           - mode: jlinkCustomZip
             os: macos-latest
  
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      # Setup tree
      - run: sudo apt-get install tree
        
      # Get universal artifact
      - uses: actions/download-artifact@master
        with:
          name: universal
          path: .
      - run: tree .
      - run: mv image.zip release-universal.zip
      
      # Get windows artifact
      - uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: windows
      - run: tree .
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq release-windows.zip -d ./windows
      
      # Get linux artifact
      - uses: actions/download-artifact@master
        with:
          name: linux-latest
          path: linux
      - run: tree .
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq release-linux.zip -d ./linux
      
      # Get macos artifact
      - uses: actions/download-artifact@master
        with:
          name: macos-latest
          path: macos
      - run: tree .
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq release-macos.zip -d ./macos
      
      - run: tree .
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          title : Release
          # GitHub secret token
          repo_token: ${{secrets.repo_token}}
          # Should this release be marked as a pre-release?
          prerelease: true # optional, default is true
          # Assets to upload to the release
          files: |
            release-universal.zip
            release-windows.zip
            release-linux.zip
            release-macos.zip
